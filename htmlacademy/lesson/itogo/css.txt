ТЕОРИЯ

    CSS названия
        селектор {
        свойство: значение;
        свойство: значение;
        }


    Миксованием классов. 
        В один класс выносят общее оформление, а в дополнительных классах описывают его модификации. В примере ниже размеры карточек товаров можно описать в CSS-правиле .product, а особый фон для хита продаж — в правиле .hit.
            <li class="product">Товар</li>
            <li class="product hit">Товар, а ещё хит продаж</li>
            <li class="product hit sale">Товар, хит продаж и со ски-и-идкой!</li>


    /* и */. - комментарии

    Приоритеты

        Нижнее правило переопределеяет верхние. 
        <style> имеет высший приоритет в коде сайта, а не в стилях
        Есть правило особенности класса. В нем пока не разобрался, но можно посчитать, какой класс, важнее другого. 

    @font-face. «Эт-правила» ещё называют CSS-директивами.
        serif — шрифт с засечками;
        monospace — моноширинный шрифт;
        cursive — шрифт с неформальным начертанием, например, имитация рукописного текста или леттеринга;
        fantasy — декоративный шрифт, например, всемирно известный Comic Sans
        sans-serif — шрифт без засечек.

    Величина 1em — это такой же размер шрифта, что и у родителя.


РЕАЛЬНЫЕ ПАРАМЕТРЫ


    color: red;    /* красный цвет текста */
    padding: 10px; /* внутренний отступ размером 10 пикселей */
    background-color: gray;
    background-image: url("img/bottle.svg");  /* фоновая картинка */

    font-size: 14px;
    line-height: 26px; - оступ /* значение будет примерно 12px */
    font: 16px/26px "Arial", sans-serif;
    font-family: "PT Sans", "Arial", sans-serif;
    @font-face {
        font-family: "Roboto";
        src:
            local("Roboto Regular"),
            url("roboto.woff") format("woff");
        }
    font-weight: normal; - толщина 
    font-style: normal;
    font-variant: normal;  

    border-radius: 50%;
    list-style: disc;
    margin: 0;

    text-align, горизонтальное выравнивание 
        left — выравнивание по левому краю блока, это значение по умолчанию;
        right — по правому краю блока;
        center — по центру блока;
        justify — по ширине блока, при этом слова в строке будут размещаться так, чтобы занять равномерно всё пространств

    vertical-align
        top — выравнивание по верхнему краю строки;
        middle — по середине строки;
        bottom — по нижнему краю строки;
        baseline — по базовой линии строки (значение по умолчанию).

    white-space
        nowrap — схлопывает лишние пробелы и отображает весь текст одной строкой без переносов;
        pre — сохраняет пробелы и переносы как в исходном коде аналогично тегу <pre>;
        pre-wrap — работает как значение pre, но добавляет автоматические переносы, если текст не помещается в контейнер;
        normal — режим по умолчанию: лишние пробелы и переносы строк схлопываются, текст переносится, пробелы в конце строк удаляются.
        break-spaces — поведение идентично pre-wrap, но при схлопывании пробелов остаются нетронутыми зарезервированные пробелы, такие как пробелы в конце строки;
        pre-line — как normal, лишние пробелы схлопываются, но строки переносятся на символе переноса строки, на <br> и по мере заполнения строки.

    text-decoration
        underline — подчёркивание;
        line-through — зачёркивание;
        overline — надчёркивание;
        none — убирает вышеперечисленные эффекты.

    text-decoration-line
        text-decoration-style — стиль линии, может принимать значения:
        solid — сплошная линия;
        double — двойная линия;
        dotted — точечная линия;
        dashed — пунктирная линия;
        wavy — волнистая линия.
        text-decoration-color — цвет линии.

    font-style
        normal — обычное начертание;
        italic — курсивное начертание;
        oblique — наклонное начертание.
    
    text-transform, регистр символов
        lowercase — все строчные;
        uppercase — все заглавные;
        capitalize — каждое слово начинается с большой буквы;
        none — отменяет изменение регистра.



    nav a {…}        /* выберет теги a внутри тегов nav */
    .menu ul {…}     /* теги ul внутри тегов с классом menu */
    .post .title {…} /* теги с классом title внутри тегов с классом post */



























    display: grid;
    grid-template-columns: 100px 150px 1fr;
        grid-template-columns: repeat(4, 100px);
            grid-template-columns: repeat(auto-fit, minmax(100px, 150px));
    grid-column: span 2;
    grid-row: span 2;
    grid-auto-flow: row;
    padding: 15px;
    margin: 20px;
    column-gap: 15px;
    row-gap: 5px;
    gap: 20px;

    grid-template-areas: "title title price";
        .title {
            grid-area: title;
        }
            grid-template-areas: "title title price"
                     "options description description";

    justify-self
        tretch — значение по умолчанию; элемент занимает всё пространство по ширине.
        start — элемент сжимается до содержимого и прижимается к левой границе.
        end — элемент сжимается до содержимого и прижимается к правой границе.
        center — элемент сжимается до содержимого и располагается по центру.



    display: flex;
    width: 550px;
    padding-left: 20px;
    margin: 0 auto;
    justify-content
        flex-start — флекс-элементы располагаются в начале главной оси (по умолчанию — слева);
        flex-end — флекс-элементы располагаются в конце главной оси (по умолчанию — справа);
        center — флекс-элементы располагаются в центре главной оси;
        space-around — свободное пространство распределяется вокруг флекс-элементов;
        space-between — свободное пространство распределяется между флекс-элементами, 
    .wrapper{}


    display: block;

    align-items: start;
        stretch — значение по умолчанию; элементы начинаются у верхней границы и растягиваются на всю высоту.
        start — элементы выстраиваются по верхней границе и, если содержимого немного, не тянутся на всю высоту;
        end — элементы выстраиваются по нижней границе;
        center — элементы располагаются по центру;
        Потренируемся использовать align-items, а затем отцентруем логотип по вертикали.

    align-items (FLEX)
        stretch — значение по умолчанию; элементы растягиваются на всю высоту поперечной оси.
        flex-start — элементы сжимаются до содержимого и располагаются в начале поперечной оси (по умолчанию сверху);
        flex-end — элементы сжимаются до содержимого и располагаются в конце поперечной оси (по умолчанию снизу);
        center — элементы сжимаются до содержимого и располагаются по центру поперечной оси;
        .flex-container {
        display: flex;
        align-items: flex-start;
        }
    flex-direction: column; (row)
    order: 5;

    align-self во флексе

    flex-wrap: wrap;

    .item:nth-child(2) { ... }
    .item:nth-child(2n) { ... }


    max-width: 100%;
    height: auto;


    <video controls>
        <source src="video.mp4" type="video/mp4">
    </video>

        width и height	задают ширину и высоту видео
        controls	пустой атрибут, при наличии которого отображается панель управления видео
        preload	задаёт режим предзагрузки видео, имеет 3 возможных значения:
        none — не загружать ничего;
        metadata — загрузить служебную мета-информацию (длительность, первый кадр и так далее);
        auto — можно загрузить всё видео.
        значение по умолчанию зависит от браузера
        src	задаёт адрес видеофайла
        autoplay	пустой атрибут, при наличии которого воспроизведение видео начинается автоматически
        poster	задаёт адрес картинки-обложки, которая отображается, когда видео ещё не загрузилось или не воспроизводится

    <audio controls>
        <source src="sound.mp3" type="audio/mpeg">
        <source src="sound.oga" type="audio/ogg">
    </audio>











    .class1.class2 { }
    Стили будут применяться ко всем элементам, которые одновременно имеют класс class1 и class2.      
        if (firstSelector && secondSelector) { ... }

    и куча других данных по классам  



    a, img {
        /* стили для ссылок и изображений */
        }


    <ul class="target"></ul>
    ul.target {...} /* выбор всех тегов ul с классом target */

    <p class="green text"></p>
        .text.green {...} /* выбор элементов с двумя классами: text и green */



        /* выбрать все теги strong внутри тегов p */
        p strong { ... }

        /* выбрать все элементы с классом .hit внутри тегов ul */
        ul .hit { ... }

        /* выбрать все ссылки внутри элементов с классом .menu,
        которые лежат внутри элементов с классом .footer */
        .footer .menu a { ... }



        <ul>
        <li class="hit"></li>
        <li class="miss"></li>
        </ul>
        Селектор .hit + .miss применит стили к элементу с классом miss, так как перед ним есть элемент с классом hit.


        Например: ul > li или ul > li > span. - только для дочерних



        a:visited { ... }
        li:last-child { ... }
        .alert:hover { ... }
        tr:hover { ... }


        a:link { ... }
        a:visited { ... }
        a:hover { ... }
        a:active { ... }

        input:focus {


        input[checked] { ... }
        input[type="text"] { ... }





        background-color: #ff0000;
        background-repeat
            repeat — повторять во всех направлениях. Это значение по умолчанию.
            repeat-x — повторять только по горизонтали.
            repeat-y — повторять только по вертикали.
            no-repeat — не повторять.

        background-position: 50% 50%;
        background-position: right bottom;
        background-position: 50px 100px;
        background-position: 0 100%;
        background-position: left bottom;


        background-attachment
            scroll — фон прокручивается вместе с содержимым. Это значение по умолчанию.
            fixed — фон не прокручивается, зафиксирован на одном месте.


        background: [bc] [bi] [br] [bp] [ba];
        /* Обозначения:
        [bc] — background-color
        [bi] — background-image
        [br] — background-repeat
        [bp] — background-position
        [ba] — background-attachment
        */