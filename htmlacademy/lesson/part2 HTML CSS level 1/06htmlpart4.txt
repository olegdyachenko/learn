Курс 2. Знакомство с HTML и CSS. Часть 3: Ссылки и изображения

Раздел про ссылки


Ссылки создаются с помощью очень короткого тега <a> (сокращение от «anchor»). Например, вот так:

<a href="https://htmlacademy.ru">HTML Academy</a>
Адрес ссылки задаётся в формате URL с помощью атрибута href (сокращение от «hyper reference»).






Такой адрес называется относительным. В нём, в отличие от «обычных» адресов, нет адреса сайта! Чтобы перейти по относительному адресу, браузер должен его «расшифровать». Для этого он обычно использует положение текущей страницы. Например, в папке c:/blog есть два файла:

c:/blog/
      |-index.html // в браузере открыта эта страница
      |-inner.html
В браузере открыта страница c:/blog/index.html, и в ней есть ссылка с относительным адресом inner.html. Чтобы перейти по этой ссылке, браузер смотрит на расположение открытой страницы и заменяет в нём последнюю часть:

c:/blog/index.html + inner.html // заменяем последнюю часть
c:/blog/inner.html              // открываем этот файл








Абсолютные адреса
Относительные адреса отлично подходят, если вы делаете сайт на своём компьютере или создаёте навигацию по страницам своего же сайта. Но если нужно сделать ссылку на другой сайт в интернете, то необходимо использовать уже «обычный» адрес.

Этот «обычный» или полный адрес называется абсолютным. Выглядит он, например, так:

https://site.ru/blog/index.html
Абсолютные адреса содержат минимум три части: протокол, имя сервера и путь.

https:           — протокол
//site.ru        — имя сервера
/blog/index.html — путь
Если в адресе нет имени сервера или протокола, то это относительный адрес:

https://site.ru/blog/index.html - абсолютный адрес
      //site.ru/blog/index.html - относительный адрес
               /blog/index.html - относительный адрес
                     index.html - относительный адрес
В тексте главной страницы не хватает одной полезной ссылки — ссылки на тренажёры по вёрстке. Как раз для неё и пригодится абсолютный адрес.





Для того чтобы предотвратить открытие файлов прямо в браузере, у тега <a> существует атрибут download, который поможет именно скачать файл.

<a href="file.pdf" download>Браузер скачает меня, а не будет читать</a>
При скачивании или загрузке файлов со сторонних сайтов для безопасности можно использовать атрибут rel="noopener". Этот атрибут позволяет игнорировать скрипты сторонней страницы, которые могут влиять на загрузку файла. Особенно актуален этот атрибут в случае, если загрузка происходит в новой вкладке или новом окне.











Вот так выглядит адрес, состоящий из одного якоря:

<a href="#part1">Глава 1</a>
При щелчке по такой ссылке браузер найдёт на странице элемент с соответствующим атрибутом id и прокрутит окно страницы к нему.

<article id="part1">Содержание первой главы</article>
При этом перезагрузки страницы не произойдёт.

Интересно, что якорь также можно использовать и в абсолютных адресах, тогда после перехода на нужную страницу по аналогии произойдёт прокрутка к заданной части этой страницы.

Якоря отлично подойдут для создания оглавления для статьи в этом посте.






<img src="logo.png">




На самом деле форматов существует достаточно много, но основных несколько: JPEG, PNG, SVG и GIF. С ними мы и познакомимся.

На этом шаге рассмотрим подробнее формат SVG. SVG (Scalable Vector Graphics) переводится как масштабируемая векторная графика. Качество таких изображений не меняется при изменении размеров, да и вес у них небольшой. Формат SVG отлично подходит для малоцветных схем, логотипов и иконок.



То есть, формат SVG подходит если:

необходимо масштабировать изображение без потерь;
изменять цвет элементов изображения;
нужно анимировать части изображения.
На следующих шагах мы разберём оставшиеся форматы, а сейчас давайте добавим аватарку в правильном формате SVG в наш блог.






Формат JPEG
Давайте продолжим разбираться с форматами изображений. Сейчас нам нужно вставить картинки в блог в правильном формате. Первая картинка — это фотография, и для неё прекрасно подходит формат JPEG.

Этот формат был разработан для сжатия и хранения полноцветных фотографий. Он поддерживает более 16 миллионов цветов. Но нужно помнить, что JPEG сжимает изображения с потерей качества. Поэтому если мы хотим уменьшить вес изображения, то придётся ухудшать его внешний вид. Главная задача при работе с JPEG — подобрать такой уровень сжатия, чтобы и вес, и качество картинки были приемлемыми.

Таким образом, формат JPEG лучше подходит для:

полноцветных изображений, фотографий;
изображений с плавным переходом яркости и контраста;
рисунков с большим количеством разноцветных деталей.
Давайте добавим JPEG-картинку в новую запись в блоге.







Формат PNG
В отличие от JPEG, PNG является форматом сжатия без потерь и позволяет сохранять изображения, в которых требуется особенная чёткость. Например, скриншоты сайтов, чертежи и печатный текст. Главная особенность формата PNG — поддержка прозрачности, то есть каждому пикселю в отдельности можно задать свою степень прозрачности.

Итак, формат PNG подходит для:

изображений с прозрачностью и полупрозрачностью;
полноцветных изображений, когда необходима повышенная точность;
изображений с резкими переходами цветов.
PNG — это относительно новый формат, который был введён как альтернатива для формата GIF, который мы рассмотрим на следующем шаге. А сейчас добавим PNG-картинку в блог.

Обратите внимание, что часть картинок мы подключаем из папки img, а часть — из папки files, например:

<img src="img/raccoon.jpg">
<img src="files/portrait.png">
В папке img мы решили хранить «интерфейсные» картинки. Обычно это изображения, которые появляются ещё при вёрстке сайта. Они могут повторяться во многих местах интерфейса сайта.

В папке files мы решили хранить «контентные» картинки. Это изображения, которые обычно появляются при наполнении сайта. Контент-менеджер может загружать их на сайт с помощью системы управления и потом вставлять в содержание отдельных страниц.

Разделять эти ресурсы полезно. Например, мы сможем запретить менеджеру работать с папкой img, и он не сможет по ошибке удалить какую-то важную интерфейсную картинку.







Закрыть
Формат GIF
И последний формат изображений, который мы рассмотрим в этой части, — GIF.

Формат был разработан для передачи растровых изображений по интернету. GIF имеет цветовую палитру, состоящую из 256 цветов. Алгоритм GIF выбирает 256 наиболее используемых в исходном изображении цветов, а все остальные оттенки создаются путём подмешивания — подбора соседних пикселей таким образом, чтобы человеческий глаз воспринимал их как нужный цвет. По этой причине GIF не подходит для хранения полноцветных изображений и фотографий, но подходит для простейших анимаций.

Формат поддерживает прозрачность — каждый пиксель изображения может быть в двух состояниях: прозрачный или непрозрачный, полупрозрачность не поддерживается.

В последнее время GIF-изображения становятся всё менее используемыми и заменяются на другие, более оптимальные форматы.

Таким образом, формат GIF подходит если:

нужна простейшая анимация.





В HTML, чтобы управлять шириной или высотой изображения, нужно использовать атрибуты width и height. Размеры в этих атрибутах задаются без единиц измерения px. Например:

<img src="logo.png" width="200" height="100">
В примере выше изображению задана ширина 200px и высота 100px.

Если задать только один из размеров, ширину или высоту, то вторую размерность браузер вычислит самостоятельно исходя из пропорций изображения.

Кстати, при работе с высотой и шириной изображения нужно быть очень аккуратным. Ведь если задать картинке одновременно и высоту, и ширину, то браузер может нарушить пропорции исходного изображения.



Специально для таких случаев, когда картинка не может отобразиться, и существует альтернативный текст. Ещё альтернативный текст помогает сайтам оставаться доступными, например, для категории пользователей, которая не имеет возможности видеть картинки. Что определённо является большим плюсом.

Альтернативный текст изображения задаётся с помощью атрибута alt. Например:

<img src="cat.png" alt="Кот, который гуляет сам по себе">



<a href="http://keksby.ru">
  <img src="cat.png" alt="Кекс">
</a>





Теги figure и figcaption, демонстративный материал
В галерее селфи каждая маленькая картинка-превьюшка ссылается на отдельную страницу с «фотокарточкой». Эта фотокарточка содержит полноразмерное изображение и его описание. Она достаточно независима, и позже мы сможем вставить её на любую другую страницу блога. Как правильно размечать такие «карточки»?

Для этого отлично подойдёт тег <figure>. Этот тег хорош для любого иллюстративного или демонстрационного материала, которым можно дополнить содержание документа. Таким материалом могут быть схемы, графики, примеры кода, таблицы и так далее. При удалении иллюстративного материала основное содержание не должно пострадать, иначе это уже не дополнительный материал и тег <figure> не очень подходит для его разметки.

Обычно каждый такой материал сопровождает разъясняющий комментарий, или «легенда». Для разметки этого комментария предназначен ещё один тег — <figcaption>, который размещается первым или последним элементом внутри <figure>. Например:

<figure>
  Схема, график, диаграмма или код
  <figcaption>Подпись к содержимому</figcaption>
</figure>
Давайте с помощью <figure> разметим фото в нашей галерее. Приступим.

По умолчанию у тега figure есть отступы, поэтому мы добавили стили для figure и figcaption, которые можно посмотреть во вкладке style.css.








Ссылки с пустым href, атрибут title
На страницах с фотокарточками есть ссылки, которые ведут на предыдущую и следующую фотографии. Как быть с этой ссылкой, например, на последней фотокарточке? Ведь нет никакой следующей фотографии. Можно удалить ссылку целиком, а можно поступить иначе.

Тег <a> можно использовать вообще без адреса, то есть без атрибута href. Такой тег обозначает «ссылку-заглушку», которая в других условиях может стать обычной ссылкой (например, когда мы с последней фотки перейдём в середину галереи). Часто ссылки-заглушки используют, чтобы показать, что мы находимся на текущей странице:

<nav>
  <ul>
    <li><a>1 страница</a></li>
    <li><a href="2">2 страница</a></li>
    <li><a href="3">3 страница</a></li>
  </ul>
</nav>
Когда мы удаляем атрибут href у ссылки, то лучше оставить подсказку о том, почему мы это сделали. Также подсказки помогают разъяснить назначение непонятных ссылок и ссылок-изображений. Подсказку можно добавить с помощью атрибута title. Например:

<a title="Ну какое назад? Вы на первой фотке!">Назад</a>
Подсказка появится, когда курсор задержится над ссылкой некоторое время.

Теперь давайте доработаем навигацию на последней странице галереи.

После выполнения этого шага можно смело скачивать архив со сделанным нами Сайтом начинающего верстальщика.




    <a href="https://figuresonfields.com"><figure><img src="img/field.jpg" alt="Фигуры на полях"><figcaption>Загадочные фигуры на полях оказались ландшафтным оформлением поля для гольфа</figcaption></figure></a>